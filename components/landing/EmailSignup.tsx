'use client';

import React, { useState } from 'react';
import { Button } from '../ui/button';
import { Input } from '../ui/input';
import { motion } from 'framer-motion';

interface EmailSignupProps {
  title?: string;
  buttonText?: string;
  className?: string;
}

export default function EmailSignup({ 
  title = "–ü–æ–ª—É—á–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö —á–∞–π–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö –≤ –≤–∞—à–µ–º —Ä–∞–π–æ–Ω–µ",
  buttonText = "–£–≤–µ–¥–æ–º–∏—Ç—å –º–µ–Ω—è",
  className = ""
}: EmailSignupProps) {
  const [email, setEmail] = useState('');
  const [isSubscribed, setIsSubscribed] = useState(false);
  const [isLoading, setIsLoading] = useState(false);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!email || !email.includes('@')) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã');
      return;
    }

    setIsLoading(true);
    
    // Simulate API call
    setTimeout(() => {
      setIsSubscribed(true);
      setIsLoading(false);
      console.log('Email signup:', email);
    }, 1000);
  };

  if (isSubscribed) {
    return (
      <motion.div 
        initial={{ opacity: 0, scale: 0.95 }}
        animate={{ opacity: 1, scale: 1 }}
        className={`flex items-center justify-center p-6 bg-tea-100 rounded-lg border border-tea-200 ${className}`}
      >
        <span className="text-2xl mr-2">‚úÖ</span>
        <span className="text-tea-800 font-medium">–°–ø–∞—Å–∏–±–æ! –ú—ã —É–≤–µ–¥–æ–º–∏–º –≤–∞—Å –æ –Ω–æ–≤—ã—Ö –º–µ—Å—Ç–∞—Ö –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏.</span>
      </motion.div>
    );
  }

  return (
    <div className={`p-6 bg-white/80 backdrop-blur-sm rounded-lg shadow-md ${className}`}>
      <div className="flex items-center mb-4">
        <span className="text-2xl mr-2">üìß</span>
        <h3 className="text-lg font-semibold text-forest-800">{title}</h3>
      </div>
      
      <form onSubmit={handleSubmit} className="flex flex-col sm:flex-row gap-3">
        <Input
          type="email"
          placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          className="flex-1 bg-white border-tea-300 focus:border-tea-500 focus:ring-tea-500"
          disabled={isLoading}
        />
        <Button
          type="submit"
          disabled={isLoading}
          className="bg-gradient-to-r from-tea-500 to-sage-600 text-white hover:opacity-90 transition-opacity px-6"
        >
          {isLoading ? '–ü–æ–¥–ø–∏—Å–∫–∞...' : buttonText}
        </Button>
      </form>
      
      <p className="text-xs text-sage-600 mt-2">
        –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ 500+ —ç–Ω—Ç—É–∑–∏–∞—Å—Ç–∞–º —á–∞–π–Ω—ã—Ö —Ü–µ—Ä–µ–º–æ–Ω–∏–π. –ù–∏–∫–∞–∫–æ–≥–æ —Å–ø–∞–º–∞, –æ—Ç–ø–∏—Å–∫–∞ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è.
      </p>
    </div>
  );
}